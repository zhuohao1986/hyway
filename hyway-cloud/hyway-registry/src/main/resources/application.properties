server.port=2000

spring.application.name=hyway-registry
#服务注册中心实例的主机名
eureka.instance.hostname=127.0.0.1

eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
#服务注册中心的配置内容，指定服务注册中心的位置
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
#eureka.client.serviceUrl.defaultZone=http://127.0.0.1:2000/eureka/
#是否向服务注册中心注册自己
eureka.client.register-with-eureka=false
#是否检索服务
eureka.client.fetch-registry=false
#关闭注册中心的保护机制，Eureka 会统计15分钟之内心跳失败的比例低于85%将会触发保护机制，不剔除服务提供者，如果关闭服务注册中心将不可用的实例正确剔除
eureka.server.enable-self-preservation=false
#剔除失效服务间隔
eureka.server.eviction-interval-timer-in-ms=20000

#spring.security.user.roles=SUPERUSER
#spring.security.user.name=hyway
#spring.security.user.password=hyway@123#
#eureka.instance.metadata-map.user.name=hyway        
#eureka.instance.metadata-map.user.password=hyway@123#




#集群版
# 心跳间隔
#eureka.instance.lease-renewal-interval-in-seconds= 3
 # 服务失效时间： 如果多久没有收到请求，则可以删除服务
#eureka.instance.lease-expiration-duration-in-seconds= 7

# renewal-percent-threshold: 0.1
# 关闭自我保护模式
#eureka.server.enable-self-preservation=false
# Eureka Server 自我保护系数，当enable-self-preservation=true时，启作用
# renewal-percent-threshold:
# 设置清理间隔,单位为毫秒,默认为0
#eureka.server.eviction-interval-timer-in-ms= 3000
# 设置如果Eureka Server启动时无法从临近Eureka Server节点获取注册信息，它多久不对外提供注册服务
#eureka.server.wait-time-in-ms-when-sync-empty= 6000000
# 集群之间相互更新节点信息的时间频率
#eureka.server.peer-eureka-nodes-update-interval-ms= 60000

